.. _base01:

[基础] 一条查询 SQL 语句是怎么执行的
#######################################################

示例语句

::

    SELECT * FROM T WHERE ID = 10;

在理解 MySQL 查询数据过程之前，先看一下 MySQL 的基本架构示意图

.. image:: /_static/images/mysql/mysql-001.png

根据架构示意图，可以看到 MySQL 每个部分都做了什么


连接器
===========

TCP 握手后保持连接，默认 8 小时。所以尽量使用长连接或连接池操作。

- 定期断开长连接，或在大内存查询操作后断开。视业务情况而定
- MySQL 5.7+ 开始，执行 ``mysql_reset_connect`` 重置连接


查询缓存
===================

已执行过的 SQL 会以 KV 的形式缓存下来，不建议使用

- 更新表操作会清空缓存
- 静态配置标表比较适合使用查询缓存
- MySQL 8.0+ 版本取消了查询缓存

分析器
===================

- 词法分析
- 语法分析

优化器
===================

- 决定选择使用索引
- ``join`` 连表查询时，决定表连接顺序

执行器
===================

会在 SQL 执行前先判断执行权限，然后根据有无索引来执行 SQL

比如

::

    SELECT * FROM T WHERE ID = 10;

**无索引**
    - 调用引擎接口，读取表第 1 行。判断是否符合查询条件，符合则存入结果集；不符合则继续
    - 读取表下一行，重复上一步，直至遍历全表
    - 将结果集返回客户端

**有索引**
    - 取符合索引条件的第一行，存入结果集
    - 取符合索引条件的下一行，存入结果集，直到没有符合条件的记录
    - 将结果集返回客户端


\ `返回顶部⬆︎ <#>`_\
